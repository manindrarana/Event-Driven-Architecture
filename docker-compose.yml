version: '3.8'

services:
  authentication:
    build:
      context: ./authentication
      dockerfile: Dockerfile
    env_file: ./authentication/.env
    environment:
      - DJANGO_SETTINGS_MODULE=authentication.settings
    volumes:
      - ./authentication:/app
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    command: [
      "sh",
      "-c",
      "wait-for-it.sh postgres:5432 -t 120 -- python3 manage.py migrate --noinput && python3 manage.py runserver 0.0.0.0:8001"
    ]

  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    env_file: ./notification/.env
    environment:
      - DJANGO_SETTINGS_MODULE=notification.settings
    volumes:
      - ./notification:/app
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - authentication
      - rabbitmq
    command: [
      "sh",
      "-c",
      "wait-for-it.sh postgres:5432 -t 120 -- python3 manage.py migrate --noinput && python3 manage.py runserver 0.0.0.0:8002"
    ]

  notification_consumer:
    build:
      context: ./notification
      dockerfile: Dockerfile
    env_file: ./notification/.env
    environment:
      - DJANGO_SETTINGS_MODULE=notification.settings
      - PYTHONPATH=/app
    volumes:
      - ./notification:/app
    depends_on:
      - notification
      - rabbitmq
    command: [
      "sh",
      "-c",
      "wait-for-it.sh rabbitmq:5672 -t 120 -- python3 notification_service/consumer.py"
    ]

  doctor:
    build:
      context: ./doctor
      dockerfile: Dockerfile
    env_file: ./doctor/.env
    environment:
      - DJANGO_SETTINGS_MODULE=doctor.settings
    volumes:
      - ./doctor:/app
    ports:
      - "8003:8003"
    depends_on:
      - postgres
      - authentication
    command: [
      "sh",
      "-c",
      "wait-for-it.sh postgres:5432 -t 120 -- python3 manage.py migrate --noinput && python3 manage.py runserver 0.0.0.0:8003"
    ]

  patient:
    build:
      context: ./patient
      dockerfile: Dockerfile
    env_file: ./patient/.env
    environment:
      - DJANGO_SETTINGS_MODULE=patient.settings
    volumes:
      - ./patient:/app
    ports:
      - "8004:8004"
    depends_on:
      - postgres
      - authentication
    command: [
      "sh",
      "-c",
      "wait-for-it.sh postgres:5432 -t 120 -- python3 manage.py migrate --noinput && python3 manage.py runserver 0.0.0.0:8004"
    ]

  postgres:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - authentication
      - notification
      - doctor
      - patient

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env

volumes:
  postgres_data:
